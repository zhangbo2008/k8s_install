



2021-01-05,17点39


回来继续搞k8s

	1.关闭hyper-v服务
	2.	bcdedit /set hypervisorlaunchtype off
	3. reboot






	https://safe.51xiazai.cn/huajunsafe/VMware-workstation-full-16.0.0-16894299.exe

	vmware激活码:
	YF390-0HF8P-M81RQ-2DXQE-M2UT6
	
	
	
	http://mirrors.njupt.edu.cn/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso


	安装时候注意
		1. 选择network, 选择打开! (当然磁盘也选上默认的20g)
		2. 配置root账号密码
		
	




	编辑虚拟机------打开共享文件夹功能.



		配置好名称和路径
		然后
		mkdir /mnt/2
		vmware-hgfsclient  # 显示php,自己起的名字.用在下面即可.
		vmhgfs-fuse .host:/php   /mnt/2

		重启之后即可.



	进行系统备份:
		1.先快照一下
		2.然后再完全克隆一个备份. (大概一分钟多点就ok了)


#############--------------------------------------#########################################
	再重新来.# 在本地部署分布式k8s

	yum -y install net-tools

	ifconfig  # 记住 ip地址.


	下面直接跑下面shell到reboot即可!





	yum install -y yum-utils device-mapper-persistent-data lvm2

	#yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
	
	yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo

	





	yum remove docker \
					  docker-client \
					  docker-client-latest \
					  docker-common \
					  docker-latest \
					  docker-latest-logrotate \
					  docker-logrotate \
					  docker-engine  -y



	yum install -y docker-ce-19.03.8-3.el7

	cat <<EOF> /etc/sysctl.d/k8s.conf
	net.bridge.bridge-nf-call-ip6tables = 1
	net.bridge.bridge-nf-call-iptables = 1
	EOF

	modprobe br_netfilter
	sysctl --system

	systemctl start docker
	systemctl enable docker

	cat > /etc/yum.repos.d/kubernetes.repo << EOF

	[kubernetes]

	name=Kubernetes

	baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64

	enabled=1

	gpgcheck=1

	repo_gpgcheck=1

	gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg

	EOF		

	yum remove -y kubeadm kubectl kubelet -y

	yum install -y kubeadm-1.18.0-0 kubectl-1.18.0-0 kubelet-1.18.0-0
	
	systemctl start kubelet
	systemctl enable kubelet

	kubeadm config images pull --image-repository=registry.aliyuncs.com/google_containers


	





	systemctl  start docker
	systemctl enable docker.service
	systemctl enable kubelet.service




	swapoff -a






	#配置好swap分区:https://blog.csdn.net/u013288190/article/details/109028126

systemctl stop firewalld.service  # 关闭防火墙.

	

	
#关闭防火墙就能通了
systemctl stop firewalld
systemctl disable firewalld


sed -i '$d'  /etc/fstab



sed -i 's/^SELINUX=.*/SELINUX=disabled/g'  /etc/selinux/config








	#reboot # 之后就可以了.




	#kubeadm reset






systemctl  start docker
systemctl enable docker.service
systemctl enable kubelet.service


# 修改hostname  http://yanue.net/post-142.html
# ----------这个地方就这么写就行.不用动.-----------------------------下面的命令master输入即可.
kubeadm init --kubernetes-version=v1.18.0 \
  --pod-network-cidr=10.244.0.0/16 \
  --service-cidr=10.1.0.0/16 \
  --image-repository=registry.aliyuncs.com/google_containers







	mkdir -p $HOME/.kube
	sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	sudo chown $(id -u):$(id -g) $HOME/.kube/config

#-----------------------------------------------------------------------





# 继续配置flannel    https://blog.csdn.net/twingao/article/details/105382305?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight


#kubectl get nodes



# 出现 error execution phase preflight: couldn't validate the identity of the API Server: abort connecting to API servers after timeout of 5m0s

#yum install -y nc

#nc -zv 192.168.91.134 6443










# 继续配置flannel
yum install -y git
git clone https://github.com/zhangbo2008/flannel
 
cd flannel


docker pull quay.io/coreos/flannel:v0.12.0-amd64

kubectl apply -f kube-flannel.yml


#-----------大概过去30秒,就会全部启动服务.


#mkdir -p $HOME/.kube
#scp 192.168.91.134:/root/.kube/config $HOME/.kube/config









# ---------查看节点. 和服务, 看都起来没.都ready就可以了.
kubectl get nodes #这时候状态就是ready了.
kubectl get all -n kube-system








# join:
#[ERROR FileAvailable--etc-kubernetes-pki-ca.crt]: /etc/kubernetes/pki/ca.crt already exists
# 如果join时候发生这个就:  https://blog.csdn.net/qianghaohao/article/details/82624920



# kubeadm join 192.168.91.138:6443 --token a8o46l.6gf95emt2itik04h \
#    --discovery-token-ca-cert-hash sha256:675cced37449e89e6c9994b30c1f7c8cb2d66b1e231e0b31a3d170f63be6b06e 



